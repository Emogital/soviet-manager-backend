name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [dev]
  push:
    branches: [dev]
  workflow_dispatch:

env:
  DOCKER_REPO_PREFIX: emogital

jobs:
  build-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set short SHA tag
        id: set_tag
        run: |
          TAG="${GITHUB_SHA::12}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@0d4c9c5ea76930a67a71a1309b3bbc75b6064a60
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build & push AuthService"
        uses: docker/build-push-action@a254f8e00ad9bc67e57dd7a5988a4d313da3e9c7
        with:
          context: ./src/AuthService
          file: ./src/AuthService/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-auth:${{ steps.set_tag.outputs.tag }}

      - name: "Build & push DataService"
        uses: docker/build-push-action@a254f8e00ad9bc67e57dd7a5988a4d313da3e9c7
        with:
          context: ./src/DataService
          file: ./src/DataService/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-data:${{ steps.set_tag.outputs.tag }}

      - name: "Build & push GameServer"
        uses: docker/build-push-action@a254f8e00ad9bc67e57dd7a5988a4d313da3e9c7
        with:
          context: ./src/GameServer
          file: ./src/GameServer/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-game:${{ steps.set_tag.outputs.tag }}

      - name: Show pushed tag
        run: |
          echo "Pushed images with tag: ${{ steps.set_tag.outputs.tag }}"

  build-push:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from csproj
        id: extract_version
        run: |
          VERSION=$(sed -n 's/.*<Version>\(.*\)<\/Version>.*/\1/p' src/AuthService/AuthService.csproj)
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build & push AuthService"
        uses: docker/build-push-action@v6
        with:
          context: ./src/AuthService
          file: ./src/AuthService/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-auth:${{ steps.extract_version.outputs.version }}

      - name: "Build & push DataService"
        uses: docker/build-push-action@v6
        with:
          context: ./src/DataService
          file: ./src/DataService/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-data:${{ steps.extract_version.outputs.version }}

      - name: "Build & push GameServer"
        uses: docker/build-push-action@v6
        with:
          context: ./src/GameServer
          file: ./src/GameServer/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REPO_PREFIX }}/soviet-manager-game:${{ steps.extract_version.outputs.version }}

      - name: Show pushed tag
        run: |
          echo "Pushed images with tag: ${{ steps.extract_version.outputs.version }}"